spring:
   application:
      name: DepartmentApplication
      
server:
   port: 8082

# Below are resilience4j configurations
resilience4j:
  circuitbreaker:
    instances:
      DepartmentEmployeeClient: #the name we defined as our circuit breaker
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50  #at 50% circuit breaker will change the status
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s  # In production waiting time should be very low in nano and micro second level
        permittedNumberOfCallsInHalfOpenState: 3 #just to check our application is up or not
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      DepartmentEmployeeClient:
        maxRetryAttempts: 10
        waitDuration: 2s
        registeredHealthIndicator: true

  ratelimiter:
    instances:
      DepartmentEmployeeClient: # below configs say that within 10s only 10 requests are allowed
        registeredHealthIndicator: true
        limitForPeriod: 10
        limitRefreshPeriod: 10s
        timeoutDuration: 3s  # after 10 seconds wait for 3 seconds without accepting any request and start again to accept